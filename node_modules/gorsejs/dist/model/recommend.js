"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRecommend = exports.getLatest = exports.getPopular = void 0;
const error_1 = require("../error");
function getPopular(axios, { category = "", cursorOptions }) {
    return axios
        .get(`/popular/${category}`, {
        params: cursorOptions,
    })
        .then(({ data }) => {
        return data;
    })
        .catch((exception) => {
        const { response } = exception;
        return Promise.reject(new error_1.GorseException(response.status, response.data));
    });
}
exports.getPopular = getPopular;
function getLatest(axios, { category = "", cursorOptions }) {
    return axios
        .get(`/latest/${category}`, {
        params: cursorOptions,
    })
        .then(({ data }) => {
        return data;
    })
        .catch((exception) => {
        const { response } = exception;
        return Promise.reject(new error_1.GorseException(response.status, response.data));
    });
}
exports.getLatest = getLatest;
function getRecommend(axios, { userId, category = "", cursorOptions, writeBackType, writeBackDelay, }) {
    return axios
        .get(`/recommend/${userId}/${category}`, {
        params: Object.assign(Object.assign(Object.assign({}, (writeBackType ? { "write-back-type": writeBackType } : {})), (writeBackDelay ? { "write-back-delay": writeBackDelay } : {})), cursorOptions),
    })
        .then(({ data }) => {
        return data;
    })
        .catch((exception) => {
        const { response } = exception;
        return Promise.reject(new error_1.GorseException(response.status, response.data));
    });
}
exports.getRecommend = getRecommend;
//# sourceMappingURL=recommend.js.map