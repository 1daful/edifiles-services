import { AxiosInstance } from "axios";
import { CursorOptions, Feedback, FeedbackCursor, FeedbackFilter, FeedbackOptions, FeedbackTypeFilter } from "../interfaces";
export declare function getFeedback<T extends string>(axios: AxiosInstance, { type, userId, itemId, cursorOptions }: FeedbackOptions<T>): Promise<Feedback<T>>;
export declare function deleteFeedback<T extends string>(axios: AxiosInstance, { type, userId, itemId }: FeedbackFilter<T>): Promise<Feedback<T>>;
export declare function getFeedbacksByType<T extends string>(axios: AxiosInstance, { type, cursorOptions }: FeedbackTypeFilter<T>): Promise<FeedbackCursor<T>>;
export declare function getFeedbacks<T extends string>(axios: AxiosInstance, options?: CursorOptions): Promise<FeedbackCursor<T>>;
export declare function insertFeedbacks<T extends string>(axios: AxiosInstance, feedbacksList: Feedback<T>[]): Promise<number>;
export declare function upsertFeedbacks<T extends string>(axios: AxiosInstance, feedbacksList: Feedback<T>[]): Promise<number>;
//# sourceMappingURL=feedback.d.ts.map